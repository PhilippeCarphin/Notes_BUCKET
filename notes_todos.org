#+TITLE: Notes on task management

* State machines

I think the Objects or Classes could be kind of like state machines

Or at least they *could* be useful in some way for live productivity.

A *usecase* : I'm at work. Find the relevant TODO objects, understand the nested
structure. It asks me what I want to work on by presenting me a todo tree. I
select a particular todo, it asks me how much time I want to spend on this.
After that amount of time, I'm notified so that I return to the select-todo
state but my cursor is where it was last time.

Some kind of tree structure. I.E. I'm working on /THIS/. That would be the
*root* of the current tree. I look for a leaf and this tells me what is the next
action to perform. Use whatever means necessary to figure out the importance of
a node based on this and that and it's children's this and that.

But when looking for the leaf for our first action, do a post-order traversal
ordered by the importance.

This coupled with some kind of time micro-management would be pretty good.


* Possible containers

** See about
   *EXAMPLE* I saw a dude on youtube mention /Ledger/, an accounting application
    that he uses for his personal finances.
    [[https://www.youtube.com/watch?v=cjoCNRpLanY][Conquering your finances with Emacs and Ledger]] 
    
   *Idea* Have one bucket of todos that is where I put things that are of the
     /Rememver to perhaps look this up on google/.
     
